
#ifndef __MERIDIAN_LOCAL_FUNC__
#define __MERIDIAN_LOCAL_FUNC__

// +----------------------------------------------------------------------
// | 関数名　　:  setupIMUAHRS()
// +----------------------------------------------------------------------
// | 機能     :  MPU6050,BNO055等の初期設定を行う.　MOUNT_IMUAHRSで機種判別.
// | 　　　　　:  0:off, 1:MPU6050(GY-521), 2:MPU9250(GY-6050/GY-9250) 3:BNO055
// | 引数　　　:  なし.
// | 戻り値　　:  なし.
// +----------------------------------------------------------------------
void setupIMUAHRS();

// +----------------------------------------------------------------------
// | 関数名　　:  joypad_read()
// +----------------------------------------------------------------------
// | 機能     :  Teensy4.0に接続されたJOYPADの値を読みとり、pad_btnに格納
// | 　　　　　:  0:なしorESP32orPCで受信, 1:SBDBT, 2:KRC-5FH
// | 戻り値　　:  なし.
// +----------------------------------------------------------------------
void joypad_read();

// +----------------------------------------------------------------------
// | 関数名　　:  trimadjustment()
// +----------------------------------------------------------------------
// | 機能     :  サーボトリム調整. サーボオンで直立静止状態を保つ.
// +----------------------------------------------------------------------
void trimadjustment();

// +----------------------------------------------------------------------
// | 関数名　　:  setyaw()
// +----------------------------------------------------------------------
// | 機能     :  ヨー軸の原点リセット. MOUNT_IMUAHRSで機種判別.
// | 　　　　　:  0:off, 1:MPU6050(GY-521), 2:MPU9250(GY-6050/GY-9250) 3:BNO055
// +----------------------------------------------------------------------
void setyaw();

// +----------------------------------------------------------------------
// | 関数名　　:  servo_all_off()
// +----------------------------------------------------------------------
// | 機能     :  全サーボオフ
// +----------------------------------------------------------------------
void servo_all_off();

// +----------------------------------------------------------------------
// | 関数名　　:  check_sd()
// +----------------------------------------------------------------------
// | 機能     :  SDカードの初期化と読み書きテスト
// +----------------------------------------------------------------------
void check_sd();

// +----------------------------------------------------------------------
// | 関数名　　:  print_error_monitor()
// +----------------------------------------------------------------------
// | 機能     :  エラー検出数をTeensyのシリアルに表示する
// +----------------------------------------------------------------------
void print_error_monitor();

// +----------------------------------------------------------------------
// | 関数名　　:  countup_errors()
// +----------------------------------------------------------------------
// | 機能     :  通信エラー検出数をカウントアップする
// +----------------------------------------------------------------------
void countup_errors();

// +----------------------------------------------------------------------
// | 関数名　　:  imuahrs_start()
// +----------------------------------------------------------------------
// | 機能     :  imu/ahrsを開始する
// +----------------------------------------------------------------------
void imuahrs_start();

// +----------------------------------------------------------------------
// | 関数名　　:  imuahrs_store()
// +----------------------------------------------------------------------
// | 機能     :  imu/ahrsのセンサー値を配列に格納する
// +----------------------------------------------------------------------
void imuahrs_store();

// +----------------------------------------------------------------------
// | 関数名　　:  execute_MasterCommand()
// +----------------------------------------------------------------------
// | 機能     :  マスターコマンドの命令ごとの処理
// +----------------------------------------------------------------------
void execute_MasterCommand();

#endif
